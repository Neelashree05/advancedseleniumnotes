
	What is Data driven testing?
Read the data from external recourse & run the test is called Data driven testing (parameterization)

	What is Advantages of Data driven testing
1.	Maintenance of the test data is easy
2.	Modification of the test data in external recourse is easy 
3.    Running test scripts in different credentials is easy

                                         Data driven testing from Properties File 
1.	What is Properties File?
Properties is java feature file where we can store the data in from of key & values pair,
Key & value data type should be always string .

2.	How to read data from properties File?
•	Get the java representation Object of the Physical file using “FileInputSteam"
•	Create a Object of “Properties” class & load all the keys
•	 Read the data using getProperty(“Key”)

**************************************************************************************************************************
url https://www.saucedemo.com/v1/
username standard_user
password secret_sauce
---------------------------------------------------------------------------------------------------------------------------
package FRameWork;

import java.io.FileInputStream;
import java.util.Properties;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class FetchingDataFromProperties_File {

	public static void main(String[] args) throws Throwable {
	
		WebDriver driver=new ChromeDriver();
		driver.manage().window().maximize();
	
		//NormalApproach
	/*	driver.get("https://www.saucedemo.com/v1/");
        driver.findElement(By.id("user-name")).sendKeys("standard_user");
	    driver.findElement(By.name("password")).sendKeys("secret_sauce");
	    driver.findElement(By.className("btn_action")).click();*/
		
		//step:-connect the file to the testscript
	//FileInputStream fis = new FileInputStream("C:\\Users\\Shobha\\Downloads\\Properties_File2pm.properties");
	
    FileInputStream fis = new FileInputStream("./Properties_File2pm.properties");
	Properties pro = new Properties();
	pro.load(fis);
	String URL = pro.getProperty("url");
	String USERNAME = pro.getProperty("username");
	String PASSWORD = pro.getProperty("password");
	
	driver.get(URL);
	driver.findElement(By.id("user-name")).sendKeys(USERNAME);
	driver.findElement(By.name("password")).sendKeys(PASSWORD);
	driver.findElement(By.className("btn_action")).click();
	
	}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------

package FRameWork;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Properties;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class InsertDAtaToProperties_File {

	public static void main(String[] args) throws Throwable {
	//Inserting data to Properties_File	
		 Properties pro = new Properties();
		 pro.setProperty("url", "https://www.saucedemo.com/v1/");
         pro.setProperty("username", "standard_user");
         pro.setProperty("password", "secret_sauce");
         
    FileOutputStream fos = new FileOutputStream("./Properties_File2pm.properties");
    pro.store(fos, "CommonData");
  
    //Fetching data from Properties_file 
    WebDriver driver=new ChromeDriver();
	driver.manage().window().maximize();
    FileInputStream fis = new FileInputStream("./Properties_File2pm.properties");
   	Properties pro1 = new Properties();
   	pro1.load(fis);
   	String URL = pro1.getProperty("url");
   	String USERNAME = pro1.getProperty("username");
   	String PASSWORD = pro1.getProperty("password");
   	
   	driver.get(URL);
   	driver.findElement(By.id("user-name")).sendKeys(USERNAME);
   	driver.findElement(By.name("password")).sendKeys(PASSWORD);
   	driver.findElement(By.className("btn_action")).click(); 
    
	}

}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Data driven testing from Excel File

Apache Poi is the open source libraries used to get & write data from all Microsoft documents like Excel , docx , ppt etc
In real time most the company preferred the keep the test script data in Excel, because data will be in well-organized manner , so that modification & maintenance is easier.

<dependencies>
  
   <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.17.0</version>
</dependency>
  
  <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
<dependency>
    <groupId>io.github.bonigarcia</groupId>
    <artifactId>webdrivermanager</artifactId>
    <version>5.6.3</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi</artifactId>
    <version>5.2.5</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
    <version>5.2.5</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.testng/testng -->
<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>7.9.0</version>
    <scope>test</scope>
</dependency>

 </dependencies>
----------------------------------------------------------------------------------------------------------------------------------------------------------------

package FRameWork;

import java.io.FileInputStream;
import java.io.FileNotFoundException;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

public class FetchingDataFromExcelSheet {

	public static void main(String[] args) throws Throwable {
		
		//Step1:- Path SetUp
//FileInputStream fes = new FileInputStream("C:\\Users\\Shobha\\Downloads\\ExcelData.xlsx");
FileInputStream fes = new FileInputStream("./ExcelData.xlsx");
            //Step2:- Keeping Excel_File In Read Mode
		Workbook book = WorkbookFactory.create(fes);
		    //step3:- getting control on Excel=sheet
		Sheet sheet = book.getSheet("Sheet1");
		    //step4:- getting control on row
		Row row = sheet.getRow(4);
	        //step5:- getting control cell
		Cell cell = row.getCell(5);
		    //step6:- fetch the cell value
		String ExcelData = cell.getStringCellValue();
	    System.out.println(ExcelData);
		
		WebDriver driver=new ChromeDriver();
		driver.get("https://www.amazon.in");
		driver.manage().window().maximize();
		driver.findElement(By.name("field-keywords")).sendKeys(ExcelData);
		
	}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
package FRameWork;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;

public class InsertDataToExcel {

	public static void main(String[] args) throws Throwable {
		
	FileInputStream fes = new FileInputStream("./ExcelData.xlsx");
        //Step2:- Keeping Excel_File In Read Mode
	Workbook book = WorkbookFactory.create(fes);
	    //step3:- getting control on Excel=sheet
	Sheet sheet = book.getSheet("Sheet1");
	
	Row row = sheet.createRow(6);

	Cell cell = row.createCell(6);
	
	cell.setCellValue("Qspiders");
	
	FileOutputStream fos = new FileOutputStream("./ExcelData.xlsx");
	book.write(fos);
	book.close();
	}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
1.	What is POM?
          POM is a java design pattern preferred by google to develop object repository. 
 
2.	Why POM ? 
           It’s a well-organized structured design pattern, where we can maintain all the web elements in page wise, due to POM design pattern maintains & modification
of element is easy & faster.

3.	Advantages of POM: 
1.	Well organized structure 
2.	Handle stale element exception.
3.	maintains & modification of element is easy


Important question for Interview
4.	What is staleElementReferenceException ?
It’s one of selenium Exception , whenever webdriver try to identify an element , element was available in GUI, but at time of performing an action on the elements element was not recognized due to  page got refreshed or elements may become old or element not attached to page in such case we get  staleElementReferenceException.

5. Difference between @findBy , @findAll &@findBys annotation

@findBy : used to identify the element using one locator or one condition
@findAll : it contains multiple @findBy annotation , it mean we can identify  the same element using multiple locator (multiple conditions) , it will use OR condition during execution of locator
     @findALL({ @findBy(@id=’username’) , @findBy(name=’user’)})
@FindBys : it contains multiple @findBy annotation , it mean we can identify  the elements using multiple locator (multiple conditions) , it will use AND condition during execution of locator
        @findBys({ @findBy(@id=’username’) , @findBy(name=’user’)})
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


Implementation

Example1:*-
package POMRepo;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class LoginPage {

	public LoginPage(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}
	
	//Declaration
	@FindBy(id="user-name")
	private WebElement UserTextField;
	
	@FindBy(css="[name='password']")
	private WebElement PasswordTextField;
	
	@FindBy(xpath = "//input[@class=\"btn_action\"]")
	private WebElement LoginButton;

	//getter methods
	public WebElement getUserTextField() {
		return UserTextField;
	}

	public WebElement getPasswordTextField() {
		return PasswordTextField;
	}

	public WebElement getLoginButton() {
		return LoginButton;
	}

	//BusinessLogics
	public void loginToApp(String Username,String Password)
	{
		UserTextField.sendKeys(Username);
		PasswordTextField.sendKeys(Password);
		LoginButton.click();
	}
}


Implementation Class

package FrameWork;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Properties;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import POMRepo.LoginPage;
import io.github.bonigarcia.wdm.WebDriverManager;

public class PomImp {

	public static void main(String[] args) throws Throwable {
		
		WebDriverManager.chromedriver().setup();
		 WebDriver driver=new ChromeDriver();
		 driver.manage().window().maximize();
		 
		 //properties_File
		 //Step1:- Path connection
//FileInputStream fis = new FileInputStream("C:\\Users\\Shobha\\Downloads\\PropertyData.properties");
		 FileInputStream fis = new FileInputStream("./PropertyData.properties");
		 
         //Step2:-load data into properties class
   Properties pro = new Properties();
   pro.load(fis);
   String URL = pro.getProperty("url");
   String USERNAME = pro.getProperty("username");
   String PASSWORD = pro.getProperty("password");
	
    driver.get(URL);
	 
  /*   driver.findElement(By.id("user-name")).sendKeys(USERNAME);
	 driver.findElement(By.id("password")).sendKeys(PASSWORD);
	 driver.findElement(By.id("login-button")).click();*/
    
    //Implementing using POM class
  /*  LoginPage login = new LoginPage(driver);
    login.getUserTextField().sendKeys(USERNAME);
    login.getPasswordTextField().sendKeys(PASSWORD);
    login.getLoginButton().click();*/
    
    LoginPage login = new LoginPage(driver);
    login.loginToApp(USERNAME, PASSWORD);
	
	
	}

}
----------------------------------------------------------------------------------------------------------------------------------------------------------------

Example2:-

package POMRepo;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindAll;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.FindBys;
import org.openqa.selenium.support.PageFactory;

public class Flipkart {

	public Flipkart(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}
	
	@FindBys({@FindBy(name="q"),@FindBy(xpath="//input[@title='Search for Products, Brands and More']")})
	private WebElement searchTextField;

	@FindAll({@FindBy(css="[type='submit']"),@FindBy(xpath="//button[@aria-label='Search for Products, Brands and More']")})
	private WebElement searchIcon;
	
	public WebElement getSearchTextField() {
		return searchTextField;
	}
	
	
	public WebElement getSearchIcon() {
		return searchIcon;
	}


	public void methodText(String name)
	{
		searchTextField.sendKeys(name);
	}
	
	public void icon()
	{
		searchIcon.click();
	}
}


implementation Class

	package FrameWork;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import POMRepo.Flipkart;
import io.github.bonigarcia.wdm.WebDriverManager;

public class FlipKartImp {

	public static void main(String[] args) {

		WebDriverManager.chromedriver().setup();
WebDriver driver=new ChromeDriver();
driver.get("https://www.flipkart.com");
driver.manage().window().maximize();
	
Flipkart flp = new Flipkart(driver);
//flp.getSearchTextField().sendKeys("Nike");

flp.methodText("Bluetooth");
flp.icon();
	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------


package AdvanceScennarios;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.Test;

import POMRepo.AmazonPage;

public class AutoSuggestionAmazon {

	@Test
	public void AutoSuggestionAmazon() throws Throwable {

		WebDriver driver=new ChromeDriver();
		driver.get("https://www.amazon.in");
		driver.manage().window().maximize();
		
		AmazonPage amPage=new AmazonPage(driver);
		amPage.dataToSearchBar("puma");
		//driver.findElement(By.cssSelector("#twotabsearchtextbox")).sendKeys("puma");
		
		Thread.sleep(2000);
// List<WebElement> allList = driver.findElements(By.xpath("//div[@class=\"s-suggestion s-suggestion-ellipsis-direction\"]"));
//	
//	for (WebElement element : allList)
//	{
//		System.out.println(element.getText());
//		if(element.getText().contains("puma sneakers for men"))
//		{
//			element.click();
//			break;
//		}
//	}
//	
		amPage.multipleElements(driver);
	
	}

}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
