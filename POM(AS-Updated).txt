1.	What is Object/Elements/POM Repository
Its collection of elements locators & business libraries in one place & its developed using POM design pattern 


2.	Why Object repository ? 
              As per the rule of the automation, we should not hardcode[fixed]elements with in test Scripts instead, we should get elements from Object Repository , because in Agile process due to frequent requirement changes , modification & maintenance of   elements is tedious job

3.	What is the advantages repository?  
a.	Reusability of elements, no need to write xpath & other locators again & again
b.	Modification in Repository is easy, when GUI changes frequently
c.	Maintenance is easy, because all the elements we kept in one place
d.	Test Script Code Optimized via business reusable libraries
e.	More Readability
f.	Test Script development is faster due to business lib
g.	Handle Stale Elements Exception.

4.	What is POM?
          POM is a java design pattern preferred by google to develop object repository.  
5.	Why POM ? 
           It’s a well-organized structured design pattern, where we can maintain all the web elements in page wise, due to POM design pattern maintains & modification is easy & faster.

6.	Advantages of POM: 
1.	Well organized structure 
2.	Handle stale element exception.
3.	maintains & modification of element is easy
4.	We can directly store Web Elements in java class
5.	Better fit for Agile processes 
6.	Support Auto heal feature 

7.	Why @FindBy & @Findall annotation instead of driver.findElement(“locator”)
                  Ans : to avoid staleElementReferenceException & alse we can use Auto heling feature in @findAll annoation
8.	What is staleElementReferenceException ?
It’s one of selenium Exception , whenever webdriver try to identify an element , element was available in GUI, but at time of performing an action on the elements element was not recognized due to  page got refreshed or elements may become old or element not attached to page in such case we get  staleElementReferenceException


9.	Rules of POM 
Rule 1 : create separte java class for every page in a application & class name should be same as the page name
Rule 2 : Identify all the elements using @findBy & @findAll , @findbys annotations & store them in speific pom / java class (Element declartion)
Rule3 : For Every POM class  create Constructor to get an Object of the POM class , inside the  Constructor use Pagefactory.initElement()  to initialize the Page Elements  at the time Object creation,  in order to initialize all the page Elements we should use Pagefactory.initElement() (Element initialization)
Rule 4 : declare all the WebElements as private & provide getters methods to accesses elements in testScripts class [this processes is called Encapsulation]
   Note : to create getters mtds inside the java class fallow below steps
              =>place cursor inside the class Right clicksource generate getters & setters  select the getters check box  click on ok button
Rule 5 : Go to every Page & identify the reusable business libraries & implement them in same POM class 


10.	Difference between POM & PageFactory design pattern?
             POM is java design pattern, where will maintain all the  Web element locator in well-organized manner
           Pagefactory it’s an extended design pattern of POM , which is used to create an Object to POM classes , & at the time of object creation it will execute all @findBy @findbys annotation then initialize all the elements


Difference between @findBy , @findAll &@findBys annotation
 All annotation available in Selenium webdriver, its traditional ways to identify the elements in GUI.
@findBy : used to identify the element using one locator or one condition
@findAll : it contains multiple @findBy annotation , it mean we can identify  the same element using multiple locator (multiple conditions) , it will use OR condition during execution of locator
     @findALL({ @findBy(@id=’username’) , @findBy(name=’user’)})
     Private Webelements userNAmeEdt;
   Note : using above concepts we can achieve Autohealing  technique 
 AutoHealing : during execution , if one locator fails to identify the element , it will retry to identify the same element using another locator 
@FindBys : it contains multiple @findBy annotation , it mean we can identify  the elements using multiple locator (multiple conditions) , it will use AND condition to during execution of locator
        @findBys({ @findBy(@id=’username’) , @findBy(name=’user’)})
     Private Webelements userNAmeEdt;


package objectRepository;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class VtigerLoginPage {

	//initialization
	public VtigerLoginPage(WebDriver driver)
	{
		PageFactory.initElements(driver,this);
	}
	
	//Declaration
	@FindBy(name="user_name")
	private WebElement userTextField;
	
	@FindBy(name="user_password")
	private WebElement passWordTextField;
	
	@FindBy(id="submitButton")
	private WebElement loginButon;

	//getterMethods
	public WebElement getUserTextField() {
		return userTextField;
	}

	public WebElement getPassWordTextField() {
		return passWordTextField;
	}

	public WebElement getLoginButon() {
		return loginButon;
	}
	//Business Logics
	/**
	 * This method is used to launch the application
	 * @param userName
	 * @param passWord
	 * @author Shobha
	 */
	public void loginToApp(String userName, String passWord)
	{
		userTextField.sendKeys(userName);
		passWordTextField.sendKeys(passWord);
		loginButon.click();
	}
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------

package objectRepository;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import Generic_Utilities.WebDriver_utility;

public class HomePage {

	//initilzation
	public HomePage(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}
	
	//Declaration
	@FindBy(linkText = "Organizations")
	private WebElement organizationLink;

	@FindBy(linkText = "Products")
	private WebElement productLink;
	
	@FindBy(linkText = "More")
    private WebElement moreLink;	

	@FindBy(linkText = "Campaigns")
	private WebElement campaignsLink;
	
	@FindBy(xpath = "//img[@src='themes/softed/images/user.PNG']")
	private WebElement logOutImg;
	
	@FindBy(xpath = "//a[text()='Sign Out']")
	private WebElement signOut;
	
	//gettermethods
	public WebElement getOrganizationLink() {
		return organizationLink;
	}
	
	public WebElement getProductLink() {
		return productLink;
	}

	public WebElement getMoreLink() {
		return moreLink;
	}

	public WebElement getCampaignsLink() {
		return campaignsLink;
	}
	
   public WebElement getLogOutImg() {
		return logOutImg;
	}

    public WebElement getSignOut() {
		return signOut;
	}

	//Business Logics
	/**
	 * this method is used to click organization link
	 */
    public void clickOrganizationLink()
	{
		organizationLink.click();
	}
    
    /**
     *  this method is used to click product link
     */
    public void clickProductLink()
    {
    	productLink.click();
    }
    
    /**
     *  this method is used to click more link
     */
    public void clickMoreLink()
    {
    	moreLink.click();
    }
    
    /**
     *  this method is used to click campaign link
     */
    public void clickCampaignLink()
    {
    	campaignsLink.click();
    }
    
    /**
     * This methos is used to Logout from Application
     */
    public void logOutFromApp()
    {
    	logOutImg.click();
    	signOut.click();
    }
  
    /**
     * This method is used to Logout from Application(Altervative Approch)
     * @param driver
     */
    public void logOut(WebDriver driver)
    {
    	WebDriver_utility wlib = new WebDriver_utility();
    	wlib.moveToElement(driver, logOutImg);
    	signOut.click();
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------

package objectRepository;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import net.bytebuddy.asm.MemberSubstitution.FieldValue;

public class CreateOrganizationPage {

	//initilaztion
	public CreateOrganizationPage(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}
	
	//Declaration
	@FindBy(css = "[alt='Create Organization...']")
	private WebElement orgnaizationPlusSign;
	
	@FindBy(name="accountname")
	private WebElement organizationName;
	
	@FindBy(id="phone")
	private WebElement organizationPhoneNum;
	
	@FindBy(id="email1")
	private WebElement organizationEmailId;

	@FindBy(xpath = "//input[@title='Save [Alt+S]']")
    private WebElement saveButton;
	
	//getterMethods
	public WebElement getOrgnaizationPlusSign() {
		return orgnaizationPlusSign;
	}

	public WebElement getOrganizationName() {
		return organizationName;
	}

	public WebElement getOrganizationPhoneNum() {
		return organizationPhoneNum;
	}

	public WebElement getOrganizationEmailId() {
		return organizationEmailId;
	}
	public WebElement getSaveButton() {
		return saveButton;
	}

	//BusinessLogics
	/**
	 * This method is used to click on + sign
	 */
	public void clickOrgPlusSign()
	{
		orgnaizationPlusSign.click();
	}
	
	/**
	 * This method is used to enter orgnization name
	 * @param OrgName
	 */
	public void enterOrgName(String OrgName)
	{
		organizationName.sendKeys(OrgName);
	}
	
	/**
	 * This method is used to enter orgnization phoneNum
	 * @param phoneNum
	 */
	public void enterOrgPhoneNum(String phoneNum)
	{
		organizationPhoneNum.sendKeys(phoneNum);
	}
	
	/**
	 * This method is used to enter orgnization email
	 * @param Email
	 */
	public void enterOrgEmail(String Email)
	{
		organizationEmailId.sendKeys(Email);
	}
	/**
	 * This method is used to enter organization data
	 * @param OrgName
	 * @param phoneNum
	 * @param Email
	 */
	  public void orgData(String OrgName,String phoneNum,String Email)
	 {
		 organizationName.sendKeys(OrgName);
		 organizationPhoneNum.sendKeys(phoneNum);
		 organizationEmailId.sendKeys(Email);
	 }
	 
	  /**
	   * This Method is used to click on save Button
	   */
	 public void clickOnSaveButton()
	 {
		 saveButton.click();
	 }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

package objectRepository;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindAll;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.FindBys;
import org.openqa.selenium.support.PageFactory;

public class CreateCampaignsPage {

	public CreateCampaignsPage(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}
@FindAll({@FindBy(xpath="//img[@title='Create Campaign...']"),@FindBy(css="[alt='Create Campaign...']")})
private WebElement campPlusSign;

@FindBy(name="campaignname")
private WebElement campaignName;

@FindBy(xpath = "//img[@src='themes/softed/images/select.gif']")
private WebElement plusSignToNavigateProductPage;

@FindBy(xpath = "//input[@title='Save [Alt+S]']")
private WebElement saveButton;

public WebElement getCampPlusSign() {
	return campPlusSign;
}

public WebElement getCampaignName() {
	return campaignName;
}

public WebElement getPlusSignToNavigateProductPage() {
	return plusSignToNavigateProductPage;
}

public WebElement getSaveButton() {
	return saveButton;
}
/**
 * 
 */
public void clickCampPlusSign()
{
	campPlusSign.click();
}
	
public void enterCampName(String campName)
{
	campaignName.sendKeys(campName);
}
public void clickProductPlusSign()
{
	plusSignToNavigateProductPage.click();
}
public void clickOnSaveButton()
{
	saveButton.click();
}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------

package objectRepository;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.FindBys;
import org.openqa.selenium.support.PageFactory;

public class CreateProductPage {

	public CreateProductPage(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}
	@FindBy(xpath = "//img[@alt='Create Product...']")
	private WebElement productPlusSign;
  
	@FindBy(name="productname")
	private WebElement productNameTextField;
	
	@FindBy(xpath = "//input[@title='Save [Alt+S]']")
	private WebElement saveButton;

	public WebElement getProductPlusSign() {
		return productPlusSign;
	}

	public WebElement getProductNameTextField() {
		return productNameTextField;
	}

	public WebElement getSaveButton() {
		return saveButton;
	}
	
	public void clickOnPlusSign()
	{
		productPlusSign.click();
	}
	public void enterProductName(String prdName)
	{
		productNameTextField.sendKeys(prdName);
	}
	public void clickSaveButton()
	{
		saveButton.click();
	}
	
}
------------------------------------------------------------------------------------------------------------------------------------------------------

package objectRepository;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class WindowSwitingToProductPage {

	public WindowSwitingToProductPage(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}

	@FindBy(xpath = "//input[@id='search_txt']")
	private WebElement productName;
	
	@FindBy(xpath = "//input[@name='search']")
	private WebElement productSearch;

	public WebElement getProductName() {
		return productName;
	}

	public WebElement getProductSearch() {
		return productSearch;
	}
	
	public void enterProductName(String prdName)
	{
		productName.sendKeys(prdName);
	}
	public void searchPrdName()
	{
		productSearch.click();
	}
	public void prdNamePresent(WebDriver driver,String productData)
	{
		driver.findElement(By.xpath("//a[text()='"+productData+"']")).click();
	}
	
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------

package objectRepository;

import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import Generic_Utilities.WebDriver_utility;

public class DeletePrdValidationPage {

	public DeletePrdValidationPage(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}
	
	@FindBy(xpath = "//input[@value='Delete']")
	private WebElement deleteButton;
	
	public void deleteProduct(WebDriver driver, String productName)
	{
		 driver.findElement(By.xpath("//table[@class='lvt small']/tbody/tr//td//a[text()='"+productName+"']/../preceding-sibling::td//input[@type='checkbox']")).click();
	}
	
	public void clickOnDeleteButton(WebDriver_utility wlib,WebDriver driver) throws InterruptedException
	{
		deleteButton.click();
		Thread.sleep(3000);
		 wlib.alertAccept(driver);
		 Thread.sleep(3000);
	}
	
	public void validateProductDeleted(WebDriver driver, String productName)
	{
		boolean flag = false;
		 List<WebElement> productList = driver.findElements(By.xpath("(//table[@class='lvt small']/tbody/tr/td[3])[position()>1]")); 
			for (WebElement prdName : productList)
			{
				String actData = prdName.getText();
			//	System.out.println(actData);
				if(actData.contains(productName))
				{
					flag=true;
				   break;
				}}
			if(flag)
			{
				System.out.println("product data is not deleted");
			}
			else
			{
				System.out.println("product data is deleted");
			}
	}
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

package objectRepository;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.PageFactory;

public class ValidationAndVerification {

	public ValidationAndVerification(WebDriver driver)
	{
		PageFactory.initElements(driver, this);
	}
	
	public void campData(WebDriver driver,String campaginName )
	{
 String actData = driver.findElement(By.xpath("//span[@id='dtlview_Campaign Name']")).getText();
	     if(actData.contains(campaginName))
	     {
	    	 System.out.println("CampaignData is matched");
	     }
	       else
	     {
	    	 System.out.println("CampaignData is not matched");
	     }
	}
	
	public void productInCamp(WebDriver driver,String prdName)
	{
		String actData = driver.findElement(By.xpath("//td[@id='mouseArea_Product']")).getText();
	if(actData.contains(prdName))
	{
		 System.out.println("ProductData is matched");
    }
      else
    {
   	 System.out.println("ProductData is not matched");
    }
	
	
	}
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
package Organization;

import java.io.FileInputStream;
import java.time.Duration;
import java.util.Properties;
import java.util.Random;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import Generic_Utilities.Excel_Utility;
import Generic_Utilities.File_Utility;
import Generic_Utilities.Java_Utility;
import Generic_Utilities.WebDriver_utility;
import objectRepository.CreateOrganizationPage;
import objectRepository.HomePage;
import objectRepository.VtigerLoginPage;

public class CreateOrganization {

	public static void main(String[] args) throws Throwable {
	
		 File_Utility flib = new File_Utility();
		 WebDriver_utility wlib = new WebDriver_utility();
		 Java_Utility jlib = new Java_Utility();
		 Excel_Utility elib = new Excel_Utility();
		
		 WebDriver driver;
		 String BROWSER = flib.getKeyAndValueData("browser");
		 if(BROWSER.equalsIgnoreCase("cHRoMe"))
		 {
			  driver=new ChromeDriver();
		 }
		 else if(BROWSER.equalsIgnoreCase("fireFox"))
		 {
			 driver=new FirefoxDriver();
		 }
		 else if(BROWSER.equalsIgnoreCase("edge"))
		 {
			 driver=new EdgeDriver();
		 }
		 else 
			 
		 {
			 driver=new ChromeDriver();
		 }
  String URL = flib.getKeyAndValueData("url");
  String USERNAME = flib.getKeyAndValueData("username");
  String PASSWORD = flib.getKeyAndValueData("password");
		
  wlib.maximizeWindow(driver);
  wlib.waitForElementToLoad(driver);
		
  driver.get(URL);
  VtigerLoginPage login = new VtigerLoginPage(driver);
  login.loginToApp(USERNAME, PASSWORD);
 
  HomePage home = new HomePage(driver);
  home.clickOrganizationLink();
 
  CreateOrganizationPage orgPage = new CreateOrganizationPage(driver);
  orgPage.clickOrgPlusSign();
  int ranNum = jlib.getRandomNumber();
  String organizationData = elib.readExcelDataUsingDataFormatter("Organization", 0, 0)+ranNum;
  String phoneNum = elib.readExcelDataUsingDataFormatter("Organization", 2, 1);
  String emailId = elib.readExcelDataUsingDataFormatter("Organization", 3, 1); 
  orgPage.orgData(organizationData, phoneNum, emailId);
  orgPage.clickOnSaveButton();
  Thread.sleep(2000);
  home.logOut(driver);
	}

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------

package Campaign;

import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import Generic_Utilities.Excel_Utility;
import Generic_Utilities.File_Utility;
import Generic_Utilities.Java_Utility;
import Generic_Utilities.WebDriver_utility;
import io.github.bonigarcia.wdm.WebDriverManager;
import objectRepository.CreateCampaignsPage;
import objectRepository.HomePage;
import objectRepository.ValidationAndVerification;
import objectRepository.VtigerLoginPage;

public class CreateCampaignTest {

	public static void main(String[] args) throws Throwable {
		File_Utility flib = new File_Utility();
		 WebDriver_utility wlib = new WebDriver_utility();
		 Java_Utility jlib = new Java_Utility();
		 Excel_Utility elib = new Excel_Utility();
		
		 WebDriver driver;
		 String BROWSER = flib.getKeyAndValueData("browser");
		 if(BROWSER.equalsIgnoreCase("chrome"))
		 {
			 WebDriverManager.chromedriver().setup();
			  driver=new ChromeDriver();
		 }
		 else if(BROWSER.equalsIgnoreCase("fireFox"))
		 {
			 WebDriverManager.firefoxdriver().setup();
			 driver=new FirefoxDriver();
		 }
		 else
		 {
			 driver=new ChromeDriver();
		 }
		 String URL = flib.getKeyAndValueData("url");
		 String USERNAME = flib.getKeyAndValueData("username");
		 String PASSWORD = flib.getKeyAndValueData("password");
		
		 wlib.maximizeWindow(driver);
		 wlib.elementsToGetLoaded(driver);
       
		driver.get(URL);
		VtigerLoginPage login = new VtigerLoginPage(driver);
		login.loginToApp(USERNAME, PASSWORD);
	
        HomePage home = new HomePage(driver);
        home.clickMoreLink();
        home.clickCampaignLink();
     
        CreateCampaignsPage campPage = new CreateCampaignsPage(driver);
        campPage.clickCampPlusSign();
        int ranNum = jlib.getRandomNumber();
        
        String campaginName = elib.readExcelDataUsingDataFormatter("Campaign", 0, 0)+ranNum;
        campPage.enterCampName(campaginName);
        
        campPage.clickOnSaveButton();

        ValidationAndVerification campvalidate = new ValidationAndVerification(driver);
        campvalidate.campData(driver, campaginName);
    
	   home.logOut(driver);
	}

}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
public class CreateCampaignWithProduct {

	public static void main(String[] args) throws Throwable {
		File_Utility flib = new File_Utility();
		 WebDriver_utility wlib = new WebDriver_utility();
		 Java_Utility jlib = new Java_Utility();
		 Excel_Utility elib = new Excel_Utility();
		
		 WebDriver driver;
		 String BROWSER = flib.getKeyAndValueData("browser");
		 if(BROWSER.equalsIgnoreCase("chrome"))
		 {
			  driver=new ChromeDriver();
		 }
		 else if(BROWSER.equalsIgnoreCase("fireFox"))
		 {
			 driver=new FirefoxDriver();
		 }
		 else
		 {
			 driver=new ChromeDriver();
		 }
        
		 String URL = flib.getKeyAndValueData("url");
		 String USERNAME = flib.getKeyAndValueData("username");
		 String PASSWORD = flib.getKeyAndValueData("password");
		
		 wlib.maximizeWindow(driver);
		 wlib.waitForElementToLoad(driver);
        driver.get(URL);
        VtigerLoginPage login = new VtigerLoginPage(driver);
		login.loginToApp(USERNAME, PASSWORD);
        int ranNumber = jlib.getRandomNumber();
        HomePage home = new HomePage(driver);
        home.clickProductLink();
       CreateProductPage prdPage = new CreateProductPage(driver);
        prdPage.clickOnPlusSign();
      String productData = elib.getExcelData("Product", 0, 0)+ranNumber;
	  prdPage.enterProductName(productData);
	  prdPage.clickSaveButton();
      home.clickMoreLink();
      home.clickCampaignLink();
      CreateCampaignsPage campPage = new CreateCampaignsPage(driver);
      campPage.clickCampPlusSign();
      String campaignData = elib.getExcelData("Campaign", 0, 0)+ranNumber;
         campPage.enterCampName(campaignData);
         campPage.clickProductPlusSign();
         wlib.switchingWindows(driver, "Products&action");
         WindowSwitingToProductPage campPrdPage = new WindowSwitingToProductPage(driver);
         campPrdPage.enterProductName(productData);
         campPrdPage.searchPrdName();
         campPrdPage.prdNamePresent(driver, productData);
         wlib.switchingWindows(driver, "Campaigns&action");
         campPage.clickOnSaveButton();
    ValidationAndVerification campProdValidation = new ValidationAndVerification(driver);
   campProdValidation.campData(driver, campaignData);
   campProdValidation.productInCamp(driver, productData);
   home.logOutFromApp();
	
	}

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

package Product;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.time.Duration;
import java.util.Properties;
import java.util.Random;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import Generic_Utilities.Excel_Utility;
import Generic_Utilities.File_Utility;
import Generic_Utilities.Java_Utility;
import Generic_Utilities.WebDriver_utility;
import objectRepository.HomePage;
import objectRepository.VtigerLoginPage;

public class CreateProduct {

	public static void main(String[] args) throws Throwable {
		
		 File_Utility flib = new File_Utility();
		 WebDriver_utility wlib = new WebDriver_utility();
		 Java_Utility jlib = new Java_Utility();
		 Excel_Utility elib = new Excel_Utility();
		 
		 WebDriver driver;
		 String BROWSER = flib.getKeyAndValueData("browser");
		 if(BROWSER.equalsIgnoreCase("chrome"))
		 {
			  driver=new ChromeDriver();
		 }
		 else if(BROWSER.equalsIgnoreCase("fireFox"))
		 {
			 driver=new FirefoxDriver();
		 }
		 else
		 {
			 driver=new ChromeDriver();
		 }
		 String URL = flib.getKeyAndValueData("url");
		 String USERNAME = flib.getKeyAndValueData("username");
		 String PASSWORD = flib.getKeyAndValueData("password");
		
		wlib.maximizeWindow(driver);
		wlib.elementsToGetLoaded(driver);
       
		driver.get(URL);
		VtigerLoginPage login = new VtigerLoginPage(driver);
		login.loginToApp(USERNAME, PASSWORD);
      
		int ranNum = jlib.getRandomNumber();
    
		HomePage home = new HomePage(driver);
		home.clickProductLink();
		
		driver.findElement(By.xpath("//img[@alt='Create Product...']")).click();
	
	
	String productData = elib.getExcelData("Product", 0, ranNum)+ranNum;
	driver.findElement(By.name("productname")).sendKeys(productData);
 
    driver.findElement(By.xpath("//input[@title='Save [Alt+S]']")).click();
    Thread.sleep(2000);
    driver.findElement(By.xpath("//img[@src='themes/softed/images/user.PNG']")).click();
    driver.findElement(By.xpath("//a[text()='Sign Out']")).click();

	}

}
----------------------------------------------------------------------------------------------------------------------------------------------------------------

package Product;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.time.Duration;
import java.util.List;
import java.util.Properties;
import java.util.Random;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import Generic_Utilities.Excel_Utility;
import Generic_Utilities.File_Utility;
import Generic_Utilities.Java_Utility;
import Generic_Utilities.WebDriver_utility;
import objectRepository.CreateProductPage;
import objectRepository.DeletePrdValidationPage;
import objectRepository.HomePage;
import objectRepository.VtigerLoginPage;

public class CreateProductandDeletePrd {

	public static void main(String[] args) throws Throwable {
		
		 File_Utility flib = new File_Utility();
		 WebDriver_utility wlib = new WebDriver_utility();
		 Java_Utility jlib = new Java_Utility();
		 Excel_Utility elib = new Excel_Utility();
		 
		 WebDriver driver;
		 String BROWSER = flib.getKeyAndValueData("browser");
		 if(BROWSER.equalsIgnoreCase("chrome"))
		 {
			  driver=new ChromeDriver();
		 }
		 else if(BROWSER.equalsIgnoreCase("fireFox"))
		 {
			 driver=new FirefoxDriver();
		 }
		 else
		 {
			 driver=new ChromeDriver();
		 }
	     String URL = flib.getKeyAndValueData("url");
		 String USERNAME = flib.getKeyAndValueData("username");
		 String PASSWORD = flib.getKeyAndValueData("password");
		
		 wlib.maximizeWindow(driver);
		 wlib.elementsToGetLoaded(driver);
		 driver.get(URL);
		
		 VtigerLoginPage login = new VtigerLoginPage(driver);
		 login.loginToApp(USERNAME, PASSWORD);
	    
		HomePage home = new HomePage(driver);
		home.clickProductLink();
		
	//	driver.findElement(By.linkText("Products")).click();
		//driver.findElement(By.xpath("//img[@alt='Create Product...']")).click();
	   CreateProductPage prdPage = new CreateProductPage(driver);
		prdPage.clickOnPlusSign();
		
		int ranNumber = jlib.getRandomNumber();
	
 	  String productData = elib.readExcelDataUsingDataFormatter("Product", 1, 1)+ranNumber;
 //	 driver.findElement(By.name("productname")).sendKeys(productData);
 	prdPage.enterProductName(productData);
	
 //	driver.findElement(By.xpath("//input[@title='Save [Alt+S]']")).click();    
 	prdPage.clickSaveButton();
	
 //	driver.findElement(By.linkText("Products")).click(); 
 	home.clickProductLink();
//	 driver.findElement(By.xpath("//table[@class='lvt small']/tbody/tr//td//a[text()='Product Name']/../preceding-sibling::td//input[@type='checkbox']")).click();
	    
 	DeletePrdValidationPage prdValidate = new DeletePrdValidationPage(driver);
	// driver.findElement(By.xpath("//table[@class='lvt small']/tbody/tr//td//a[text()='"+productData+"']/../preceding-sibling::td//input[@type='checkbox']")).click();
	 prdValidate.deleteProduct(driver, productData);
	 
	// driver.findElement(By.xpath("//input[@value='Delete']")).click();
	 prdValidate.clickOnDeleteButton(wlib, driver);
	
	//	  List<WebElement> productList = driver.findElements(By.xpath("(//table[@class='lvt small']/tbody/tr/td[3])[position()>1]")); 
//	    	
//	boolean flag = false;
//	
//	for (WebElement prdName : productList)
//	{
//		String actData = prdName.getText();
//		if(actData.contains(productData))
//		{
//			flag=true;
//		   break;
//		}}
//	if(flag)
//	{
//		System.out.println("product data is deleted");
//	}
//	else
//	{
//		System.out.println("product data is not deleted");
//	}
	// System.out.println("pdata"+productData);
	 prdValidate.validateProductDeleted(driver, productData);
//	wlib.alertAccept(driver);
//       driver.findElement(By.xpath("//img[@src='themes/softed/images/user.PNG']")).click();
 //      driver.findElement(By.xpath("//a[text()='Sign Out']")).click();
       home.logOutFromApp();
	}

}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
